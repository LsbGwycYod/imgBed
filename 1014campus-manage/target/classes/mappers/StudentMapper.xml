<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nbpt.lilingyi.campusmanage.mapper.StudentMapper">

    <resultMap id="BaseResultMap" type="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="userName" column="user_name" jdbcType="VARCHAR"/>
            <result property="age" column="age" jdbcType="INTEGER"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
            <result property="gender" column="gender" jdbcType="TINYINT"/>
            <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
            <result property="entryTime" column="entry_time" jdbcType="TIMESTAMP"/>
            <result property="graduationTime" column="graduation_time" jdbcType="TIMESTAMP"/>
            <result property="address" column="address" jdbcType="VARCHAR"/>
            <result property="classId" column="class_id" jdbcType="INTEGER"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ClassMap" type="Class">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="code" column="code" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="StudentClassMap" type="cn.edu.nbpt.lilingyi.campusmanage.pojo.vo.StudentClassVo" extends="BaseResultMap">
        <association property="aClass" javaType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Class" columnPrefix="class_" resultMap="ClassMap">
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id,user_name,age,
        name,gender,birthday,
        entry_time,graduation_time,address,
        class_id,create_time,update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from student
        where id = #{id}
    </select>
    <select id="selectByClassId" parameterType="integer" resultType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student">
        select
        <include refid="Base_Column_List"/>
        from student
        where class_id = #{classId}
    </select>
    <select id="selectAll" resultMap="StudentClassMap">
        select
            s.id,
            s.user_name,
            s.age,
            s.name,
            s.gender,
            s.birthday,
            s.entry_time,
            s.graduation_time,
            s.address,
            s.class_id,
            c.id as class_id,
            c.name as class_name,
            c.code as class_code
        from student as s left join class c on s.class_id = c.id
    </select>
    <select id="selectLimit" resultType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student">
        select * from student limit #{start},#{pageSize}
    </select>
    <select id="selectByTerm" resultMap="StudentClassMap">
        select
            s.id,
            s.user_name,
            s.age,
            s.name,
            s.gender,
            s.birthday,
            s.entry_time,
            s.graduation_time,
            s.address,
            s.class_id,
            c.id as class_id,
            c.name as class_name,
            c.code as class_code
        from student as s left join class c on s.class_id = c.id
        <where>
            <if test="id != null">and s.id = #{id}</if>
            <if test="name != null">and s.name like concat('%',#{name},'%')</if>
            <if test="gender != null">and s.gender = #{gender}</if>
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="integer">
        delete from student
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <delete id="batchDeleteByClassId" parameterType="integer">
        delete from student
        where  class_id = #{classId,jdbcType=INTEGER}
    </delete>
    <insert id="batchInsert" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            insert into student
            <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="item.id != null">id,</if>
                    <if test="item.userName != null">user_name,</if>
                    <if test="item.age != null">age,</if>
                    <if test="item.name != null">name,</if>
                    <if test="item.gender != null">gender,</if>
                    <if test="item.birthday != null">birthday,</if>
                    <if test="item.entryTime != null">entry_time,</if>
                    <if test="item.graduationTime != null">graduation_time,</if>
                    <if test="item.address != null">address,</if>
                    <if test="item.classId != null">class_id,</if>
            </trim>
            values
            <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="item.id != null">#{item.id,jdbcType=INTEGER},</if>
                    <if test="item.userName != null">#{item.userName,jdbcType=VARCHAR},</if>
                    <if test="item.age != null">#{item.age,jdbcType=INTEGER},</if>
                    <if test="item.name != null">#{item.name,jdbcType=VARCHAR},</if>
                    <if test="item.gender != null">#{item.gender,jdbcType=TINYINT},</if>
                    <if test="item.birthday != null">#{item.birthday,jdbcType=TIMESTAMP},</if>
                    <if test="item.entryTime != null">#{item.entryTime,jdbcType=TIMESTAMP},</if>
                    <if test="item.graduationTime != null">#{item.graduationTime,jdbcType=TIMESTAMP},</if>
                    <if test="item.address != null">#{item.address,jdbcType=VARCHAR},</if>
                    <if test="item.classId != null">#{item.classId,jdbcType=INTEGER},</if>
            </trim>
        </foreach>
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student" useGeneratedKeys="true">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="userName != null">user_name,</if>
                <if test="age != null">age,</if>
                <if test="name != null">name,</if>
                <if test="gender != null">gender,</if>
                <if test="birthday != null">birthday,</if>
                <if test="entryTime != null">entry_time,</if>
                <if test="graduationTime != null">graduation_time,</if>
                <if test="address != null">address,</if>
                <if test="classId != null">class_id,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="userName != null">#{userName,jdbcType=VARCHAR},</if>
                <if test="age != null">#{age,jdbcType=INTEGER},</if>
                <if test="name != null">#{name,jdbcType=VARCHAR},</if>
                <if test="gender != null">#{gender,jdbcType=TINYINT},</if>
                <if test="birthday != null">#{birthday,jdbcType=TIMESTAMP},</if>
                <if test="entryTime != null">#{entryTime,jdbcType=TIMESTAMP},</if>
                <if test="graduationTime != null">#{graduationTime,jdbcType=TIMESTAMP},</if>
                <if test="address != null">#{address,jdbcType=VARCHAR},</if>
                <if test="classId != null">#{classId,jdbcType=INTEGER},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student">
        update student
        <set>
                <if test="userName != null">
                    user_name = #{userName,jdbcType=VARCHAR},
                </if>
                <if test="age != null">
                    age = #{age,jdbcType=INTEGER},
                </if>
                <if test="name != null">
                    name = #{name,jdbcType=VARCHAR},
                </if>
                <if test="gender != null">
                    gender = #{gender,jdbcType=TINYINT},
                </if>
                <if test="birthday != null">
                    birthday = #{birthday,jdbcType=TIMESTAMP},
                </if>
                <if test="entryTime != null">
                    entry_time = #{entryTime,jdbcType=TIMESTAMP},
                </if>
                <if test="graduationTime != null">
                    graduation_time = #{graduationTime,jdbcType=TIMESTAMP},
                </if>
                <if test="address != null">
                    address = #{address,jdbcType=VARCHAR},
                </if>
                <if test="classId != null">
                    class_id = #{classId,jdbcType=INTEGER},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.edu.nbpt.lilingyi.campusmanage.pojo.entity.Student">
        update student
        set 
            user_name =  #{userName,jdbcType=VARCHAR},
            age =  #{age,jdbcType=INTEGER},
            name =  #{name,jdbcType=VARCHAR},
            gender =  #{gender,jdbcType=TINYINT},
            birthday =  #{birthday,jdbcType=TIMESTAMP},
            entry_time =  #{entryTime,jdbcType=TIMESTAMP},
            graduation_time =  #{graduationTime,jdbcType=TIMESTAMP},
            address =  #{address,jdbcType=VARCHAR},
            class_id =  #{classId,jdbcType=INTEGER},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
